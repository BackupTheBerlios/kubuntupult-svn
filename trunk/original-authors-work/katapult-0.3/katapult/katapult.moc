/****************************************************************************
** Katapult meta object code from reading C++ file 'katapult.h'
**
** Created: Sat Mar 5 03:03:39 2005
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.3   edited Aug 5 16:40 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "katapult.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *Katapult::className() const
{
    return "Katapult";
}

QMetaObject *Katapult::metaObj = 0;
static QMetaObjectCleanUp cleanUp_Katapult( "Katapult", &Katapult::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString Katapult::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Katapult", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString Katapult::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Katapult", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* Katapult::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = KSystemTray::staticMetaObject();
    static const QUMethod slot_0 = {"showLauncher", 0, 0 };
    static const QUMethod slot_1 = {"hideLauncher", 0, 0 };
    static const QUMethod slot_2 = {"completeQuery", 0, 0 };
    static const QUMethod slot_3 = {"clearQuery", 0, 0 };
    static const QUMethod slot_4 = {"clearOrBack", 0, 0 };
    static const QUMethod slot_5 = {"showShortcutsDialog", 0, 0 };
    static const QUMethod slot_6 = {"showGlobalShortcutsDialog", 0, 0 };
    static const QUMethod slot_7 = {"showAboutDialog", 0, 0 };
    static const QUMethod slot_8 = {"execute", 0, 0 };
    static const QUMethod slot_9 = {"previous", 0, 0 };
    static const QUMethod slot_10 = {"next", 0, 0 };
    static const QUMethod slot_11 = {"selectAction", 0, 0 };
    static const QUMethod slot_12 = {"loadCatalogPlugins", 0, 0 };
    static const QUMethod slot_13 = {"initDisplay", 0, 0 };
    static const QUParameter param_slot_14[] = {
	{ 0, &static_QUType_ptr, "QKeyEvent", QUParameter::In }
    };
    static const QUMethod slot_14 = {"keyReleased", 1, param_slot_14 };
    static const QMetaData slot_tbl[] = {
	{ "showLauncher()", &slot_0, QMetaData::Public },
	{ "hideLauncher()", &slot_1, QMetaData::Public },
	{ "completeQuery()", &slot_2, QMetaData::Public },
	{ "clearQuery()", &slot_3, QMetaData::Public },
	{ "clearOrBack()", &slot_4, QMetaData::Public },
	{ "showShortcutsDialog()", &slot_5, QMetaData::Public },
	{ "showGlobalShortcutsDialog()", &slot_6, QMetaData::Public },
	{ "showAboutDialog()", &slot_7, QMetaData::Public },
	{ "execute()", &slot_8, QMetaData::Public },
	{ "previous()", &slot_9, QMetaData::Public },
	{ "next()", &slot_10, QMetaData::Public },
	{ "selectAction()", &slot_11, QMetaData::Public },
	{ "loadCatalogPlugins()", &slot_12, QMetaData::Public },
	{ "initDisplay()", &slot_13, QMetaData::Public },
	{ "keyReleased(QKeyEvent*)", &slot_14, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"Katapult", parentObject,
	slot_tbl, 15,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_Katapult.setMetaObject( metaObj );
    return metaObj;
}

void* Katapult::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "Katapult" ) )
	return this;
    return KSystemTray::qt_cast( clname );
}

bool Katapult::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: showLauncher(); break;
    case 1: hideLauncher(); break;
    case 2: completeQuery(); break;
    case 3: clearQuery(); break;
    case 4: clearOrBack(); break;
    case 5: showShortcutsDialog(); break;
    case 6: showGlobalShortcutsDialog(); break;
    case 7: showAboutDialog(); break;
    case 8: execute(); break;
    case 9: previous(); break;
    case 10: next(); break;
    case 11: selectAction(); break;
    case 12: loadCatalogPlugins(); break;
    case 13: initDisplay(); break;
    case 14: keyReleased((QKeyEvent*)static_QUType_ptr.get(_o+1)); break;
    default:
	return KSystemTray::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool Katapult::qt_emit( int _id, QUObject* _o )
{
    return KSystemTray::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool Katapult::qt_property( int id, int f, QVariant* v)
{
    return KSystemTray::qt_property( id, f, v);
}

bool Katapult::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
